<?xml version = "1.0" encoding = "UTF-8" ?>
<!-- Version 0.0.1 -->
<!-- 2016-07-05  Sven Zwiers -->
<vscp>
<module>
	<name>VSCP AAmini</name>
 	<model>A</model>
        <version>0.0.1</version>
   <description lang="en">With this VSCP module it is possible to control up to seven LED's and get events from 8 switches.</description>
  	<infourl>http://www.vscp.org</infourl>
    <changed>2016-x-y</changed>
  	<buffersize>8</buffersize>
   <manufacturer>	
   	<name>Sven</name>
      <address>
      	<street>x</street>
         <city>x</city>
         <postcode>x</postcode>
         <country>Belgium</country>
     	</address>
      <telephone>									
      	<number>+</number>
        <description lang="en" >Main Reception</description>
   	</telephone>
   	<email>
		<address>support@</address>
		<description>Support email</description>
	</email>
   	<email>
		<address>sales@</address>
		<description>Sales inquires email</description>
	</email>
   	<email>
		<address>info@</address>
		<description>General email</description>
	</email>	
        <web>
		<address>http://</address>
		<description>Main web site</description>
	</web>					
	</manufacturer>  
	
	
	<boot>
		<algorithm>9</algorithm> <!-- Atmel AVR algorithm 0  -->
		<blocksize>8</blocksize>
		<blockcount>4096</blockcount>
	</boot>
	
	
	<registers>        

	<reg page="1" offset="0" >
		<name lang="en">Zone</name>
		<description lang="en">Zone this module belongs to</description>
		<access>rw</access>
	</reg>

	<reg page="1" offset="1" >
		<name lang="en">Subzone</name>
		<description lang="en">Subzone this module belongs to</description>
		<access>rw</access>
	</reg>
        
        <reg page="1" offset="2" >
            <name lang="en">Subzone switch 1 </name>
            <description lang="en">Subzone that switch 1 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="3" >
            <name lang="en">Subzone switch 2 </name>
            <description lang="en">Subzone that switch 2 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="4" >
            <name lang="en">Subzone switch 3 </name>
            <description lang="en">Subzone that switch 3 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="5" >
            <name lang="en">Subzone switch 4 </name>
            <description lang="en">Subzone that switch 4 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="6" >
            <name lang="en">Subzone switch 5</name>
            <description lang="en">Subzone that switch 5 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="7" >
            <name lang="en">Subzone switch 6 </name>
            <description lang="en">Subzone that switch 6 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="8" >
            <name lang="en">Subzone switch 7 </name>
            <description lang="en">Subzone that switch 7 belongs to</description>
            <access>rw</access>
        </reg>        

        <reg page="1" offset="9" >
            <name lang="en">Subzone switch 8</name>
            <description lang="en">Subzone that switch 8 belongs to</description>
            <access>rw</access>
        </reg>        
        

        <reg page="1" offset="10" >
            <name lang="en">Subzone OUTPUT1</name>
            <description lang="en">Subzone that OUTPUT1 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="11" >
            <name lang="en">Subzone OUTPUT2</name>
            <description lang="en">Subzone that OUTPUT2 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="12" >
            <name lang="en">Subzone OUTPUT3</name>
            <description lang="en">Subzone that OUTPUT3 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="13" >
            <name lang="en">Subzone OUTPUT4</name>
            <description lang="en">Subzone that OUTPUT4 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="14" >
            <name lang="en">Subzone OUTPUT5</name>
            <description lang="en">Subzone that OUTPUT5 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="15" >
            <name lang="en">Subzone OUTPUT6</name>
            <description lang="en">Subzone that OUTPUT6 belongs to</description>
            <access>rw</access>
        </reg>

        <reg page="1" offset="16" >
            <name lang="en">Subzone OUTPUT7</name>
            <description lang="en">Subzone that OUTPUT7 belongs to</description>
            <access>rw</access>
        </reg>        

        <reg page="1" offset="17" >
            <name lang="en">Subzone OUTPUT8</name>
            <description lang="en">Subzone that OUTPUT8 belongs to</description>
            <access>rw</access>
        </reg>
        
        <reg page="1" offset="18" >
            <name lang="en">output state</name>
            <description lang="en">Read OR write actual value of outputs</description>
            <access>rw</access>
        </reg>        

	<reg page="1" offset="19" >
            <name lang="en">default state</name>
            <description lang="en">default values outputs after reset</description>
            <access>rw</access>
        </reg>        
		
	<reg page="1" offset="20" >
            <name lang="en">input debounce</name>
            <description lang="en">NOT USED debounce time in 10ms for a input change to be detected as a button </description>
            <access>rw</access>
        </reg>        
		
	<reg page="1" offset="21" >
            <name lang="en">input start</name>
            <description lang="en">NOT USED minimum time in 10ms for a input change to be detected as a "start"</description>
            <access>rw</access>
        </reg>        
		
	<reg page="1" offset="22" >
            <name lang="en">follow zone/subzone</name>
            <description lang="en">Let outputs follow the ON/OFF events occuring in their zone, without using DM (bitwise)</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="23" >
            <name lang="en">input behaviour</name>
            <description lang="en">configure button(0) or state based inputs(1)(bitwise)</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="24" >
            <name lang="en">output change notification</name>
            <description lang="en">send output change event filter default=0, sends no notification(bitwise)</description>
            <access>rw</access>
        </reg>


	<reg page="1" offset="25" >
            <name lang="en">general config</name>
            <description lang="en">byte0: show ID on bootup</description>
            <access>rw</access>
        </reg>

	<!-- INPUT EVENTS SW1 -->
	<reg page="1" offset="32" >
            <name lang="en">input 1 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="33" >
            <name lang="en">input 1 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="34" >
            <name lang="en">input 1 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="35" >
            <name lang="en">input 1 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="36" >
            <name lang="en">input 1 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>

	<!-- INPUT EVENTS SW2 -->
	<reg page="1" offset="37" >
            <name lang="en">input 2 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="38" >
            <name lang="en">input 2 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="39" >
            <name lang="en">input 2 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="40" >
            <name lang="en">input 2 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="41" >
            <name lang="en">input 2 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>

	<!-- INPUT EVENTS SW3 -->
	<reg page="1" offset="42" >
            <name lang="en">input 3 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="43" >
            <name lang="en">input 3 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="44" >
            <name lang="en">input 3 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="45" >
            <name lang="en">input 3 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="46" >
            <name lang="en">input 3 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>


	<!-- INPUT EVENTS SW4 -->
	<reg page="1" offset="47" >
            <name lang="en">input 4 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="48" >
            <name lang="en">input 4 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="49" >
            <name lang="en">input 4 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="50" >
            <name lang="en">input 4 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="51" >
            <name lang="en">input 4 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>


	<!-- INPUT EVENTS SW5 -->
	<reg page="1" offset="52" >
            <name lang="en">input 5 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="53" >
            <name lang="en">input 5 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="54" >
            <name lang="en">input 5 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="55" >
            <name lang="en">input 5 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="56" >
            <name lang="en">input 5 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>


	<!-- INPUT EVENTS SW6 -->
	<reg page="1" offset="57" >
            <name lang="en">input 6 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="58" >
            <name lang="en">input 6 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="59" >
            <name lang="en">input 6 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="60" >
            <name lang="en">input 6 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="61" >
            <name lang="en">input 6 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>


	<!-- INPUT EVENTS SW7 -->
	<reg page="1" offset="62" >
            <name lang="en">input 7 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="63" >
            <name lang="en">input 7 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="64" >
            <name lang="en">input 7 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="65" >
            <name lang="en">input 7 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="66" >
            <name lang="en">input 7 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>


	<!-- INPUT EVENTS SW8 -->
	<reg page="1" offset="67" >
            <name lang="en">input 8 short button or state low vscp-class</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="68" >
            <name lang="en">input 8 short button or state low vscp-type</name>
            <description lang="en">event to be sent for short button push OR state low</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="69" >
            <name lang="en">input 8 long button or state high vscp-class</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="70" >
            <name lang="en">input 8 long button or state high vscp-type</name>
            <description lang="en">event to be sent for long button push OR state high</description>
            <access>rw</access>
        </reg>

	<reg page="1" offset="71" >
            <name lang="en">input 8 long button release</name>
            <description lang="en">event to be sent when button is released after longpush</description>
            <access>rw</access>
        </reg>


        
	<!-- DM Row 1 -->
	<reg page="0" offset="0" >
		<name lang="en">Decision matrix row 1: Oaddr </name>
		<description lang="en">
            	Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n 
		Oaddr is the originating address. We are only interested in messages from the node given here.\n
		0X00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr will not be checked and events from all nodes will be accepted. 			
		</description>
		<access>rw</access>
		</reg>
		
	<reg page="0" offset="1" >
		<name lang="en">Decision matrix row 1: flags </name>
		<description lang="en">
		Row 1 of decision matrix. Flags. Set selection behaviour.\n
            	The enable bit can be used to disable a decion matrix row while it is edited.\n
		The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event.\n  
            	That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
		</description>
		<access>rw</access>
			<bit pos="0" default="0" >
			<name lang="en">Class filter bit 8</name>
      	 	  	<description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
			<name lang="en">Class mask bit 8</name>
      	   		<description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
			<name lang="en">Reserved bit</name>
      	   		<description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
	<reg page="0" offset="2" >
			<name lang="en">Decision matrix row 1: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="3" >
			<name lang="en">Decision matrix row 1: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="4" >
			<name lang="en">Decision matrix row 1: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
	<reg page="0" offset="5" >
			<name lang="en">Decision matrix row 1: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
	<reg page="0" offset="6" >
			<name lang="en">Decision matrix row 1: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied.\n
			Only action code 0x00 is predefined and means No-Operation. All other codes are application\n
            specific and typical application defined codes could do measurement, send predefined event etc.
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="7" >
			<name lang="en">Decision matrix row 1: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>						
		
	<!-- DM Row 2 -->
	<reg page="0" offset="8" >
			<name lang="en">Decision matrix row 2: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="9" >
			<name lang="en">Decision matrix row 2: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
	<reg page="0" offset="10" >
			<name lang="en">Decision matrix row 2: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="11" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="12" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
	<reg page="0" offset="13" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
	<reg page="0" offset="14" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="15" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>							
		
<!-- DM Row 3 -->
	<reg page="0" offset="16" >
			<name lang="en">Decision matrix row 3: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="17" >
			<name lang="en">Decision matrix row 3: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
	<reg page="0" offset="18" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="19" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="20" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
	<reg page="0" offset="21" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
	<reg page="0" offset="22" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
	<reg page="0" offset="23" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
<!-- DM Row 4 -->
		<reg page="0" offset="24" >
			<name lang="en">Decision matrix row 4: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="25" >
			<name lang="en">Decision matrix row 4: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="26" >
			<name lang="en">Decision matrix row 4: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="27" >
			<name lang="en">Decision matrix row 4: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="28" >
			<name lang="en">Decision matrix row 4: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="29" >
			<name lang="en">Decision matrix row 4: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="30" >
			<name lang="en">Decision matrix row 4: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="31" >
			<name lang="en">Decision matrix row 4: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								
<!-- DM Row 5 -->
		<reg page="0" offset="32" >
			<name lang="en">Decision matrix row 5: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="33" >
			<name lang="en">Decision matrix row 3: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="34" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="35" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="36" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="37" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="38" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="39" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								
<!-- DM Row 6 -->
		<reg page="0" offset="40" >
			<name lang="en">Decision matrix row 6: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="41" >
			<name lang="en">Decision matrix row 3: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="42" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="43" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="44" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="45" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="46" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="47" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								
<!-- DM Row 7 -->
		<reg page="0" offset="48" >
			<name lang="en">Decision matrix row 7: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="49" >
			<name lang="en">Decision matrix row 7: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="50" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="51" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="52" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="53" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="54" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="55" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								
<!-- DM Row 8 -->
		<reg page="0" offset="56" >
			<name lang="en">Decision matrix row 8: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="57" >
			<name lang="en">Decision matrix row 8: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="58" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="59" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="60" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="61" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="62" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="63" >
			<name lang="en">Decision matrix row 8: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								
<!-- DM Row 9 -->
		<reg page="0" offset="64" >
			<name lang="en">Decision matrix row 9: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="65" >
			<name lang="en">Decision matrix row 9: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="66" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="67" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="68" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="69" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="70" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="71" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								
<!-- DM Row 10 -->
		<reg page="0" offset="72" >
			<name lang="en">Decision matrix row 10: Oaddr </name>
			<description lang="en">
                Row 1 of decision matrix. Originating address. Set to nickname for node that should trigger action.\n
				Oaddr is the originating address. We are only interested in messages from the node given here.\n
                0x00 is segment controller and 0xff is a node without a nickname. If bit 6 of flags is set oaddr\n
                will not be checked and events from all nodes will be accepted.
            </description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="73" >
			<name lang="en">Decision matrix row 10: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decion matrix row while it is edited.\n
			The zone and use subzone bits can be activated to have a check on the zone/subzone information of an event. That is the zone/subzone of the machine must match the one of the event to trigger the DM row.\n  
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class filter.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">Defines the ninth bit of the class mask.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">If set to one subzone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">If set to one zone should be matched to trigger DM entry action.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">If set to one the originating address should be hardcoded to trigger DM entry action.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">If set to one the originating address should be checked and match to trigger DM entry action.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="74" >
			<name lang="en">Decision matrix row 3: Class mask (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class mask that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class mask is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="75" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			The lowest eight bits of the class filter that defines the events that should trigger the action of thsi decision matrix row.\n
			Bit 8 of the class filter is stored in bit 1 of the flag byte. 			
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="76" >
			<name lang="en">Decision matrix row 2: Type mask</name>
			<description lang="en">
			Type mask that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="77" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Type filter that defines the events that should trigger the action of this decision matrix row.		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="78" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			This is the action or operation that should be performed if the filtering is satisfied. Only action code 0�00 is predefined and means No-Operation. All other codes are application specific and typical application defined codes could do measurement, send predefined event etc.		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="79" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			A numeric action parameter can be set and its meaning is application specific.
			</description>
			<access>rw</access>
		</reg>	
								


								
	</registers>
	
	   	   	   	   	   	    		   	   	  	
	<!-- Decison matrix -->
    <dmatrix>
  
		<level>1</level>					
		<start page="0" offset="0"/> 	
		<rowcnt>10</rowcnt>
    <rowsize>8</rowsize>
					
    	<action code="0x01">				
            <name lang="en">Toggle output(s)</name>
            <description lang="en">
			    Light up or turn off LED(s).    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for LED's</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents LED1 and so on.	      	   
      	        </description>
      	   
      	        <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to toggle LED1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to toggle LED2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to toggle LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to toggle LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to toggle LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to toggle LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to toggle LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>

    	<action code="0x02">				
            <name lang="en">Turn output(s) ON</name>
            <description lang="en">
			    Light up LED(s).    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for LED's</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents LED1 and so on.	      	   
      	        </description>
      	   
      	        <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to one to turn on LED1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to one to turn on LED2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to one to turn on LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to one to turn on LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to one to turn on LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to one to turn on LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to one to turn on LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>

    	<action code="0x03">				
            <name lang="en">Turn output(s) OFF</name>
            <description lang="en">
			    Turn off LED(s).    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for LED's</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents LED1 and so on.	      	   
      	        </description>
      	   
      	        <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to one to turn off LED1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to one to turn off LED2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to one to turn off LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to one to turn off LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to one to turn off LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to one to turn off LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to one to turn off LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>

    	
   	<action code="0x04">				
            <name lang="en">Toggle DM-row(s)</name>
            <description lang="en">
			    Toggle DM-row active.    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for DM</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents line1 and so on.	      	   
      	        </description>
      	   
      	        <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to toggle DM1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to toggle DM2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to toggle LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to toggle LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to toggle LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to toggle LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to toggle LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>

    	<action code="0x05">				
            <name lang="en">Turn DM active ON</name>
            <description lang="en">
			    Activate DM line(s).    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for LED's</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents LED1 and so on.	      	   
      	        </description>
      	   
      	        <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to one to turn on LED1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to one to turn on LED2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to one to turn on LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to one to turn on LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to one to turn on LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to one to turn on LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to one to turn on LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>

    	<action code="0x06">				
            <name lang="en">Turn DM active OFF</name>
            <description lang="en">
			    Turn off DM row(s).    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for LED's</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents LED1 and so on.	      	   
      	        </description>
      	   
      	        <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to one to turn off LED1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to one to turn off LED2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to one to turn off LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to one to turn off LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to one to turn off LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to one to turn off LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to one to turn off LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>
	<action code="0x07">				
            <name lang="en">DIM analog out</name>
            <description lang="en">
			    Turn off LED(s).    	
        	</description>
        	<param>							
      		    <name lang="en">Bitarry for analog output's</name> 
      	        <description lang="en">
				    A bitarray where the first bit represents LED0 and so on.	      	   
      	        </description>
      	   
      	            <bit pos="0" default="false">
      			    <name lang="en">ANA0</name>
      		        <description lang="en">Reserved LED0</description> 
      		    </bit>
      		    <bit pos="1" default="false">
      			    <name lang="en">LED1</name>
      		        <description lang="en">Set to one to turn off LED1</description> 
      		    </bit>  
      		    <bit pos="2" default="false">
      			    <name lang="en">LED2</name>
      		        <description lang="en">Set to one to turn off LED2</description> 
      		    </bit>  
      		    <bit pos="3" default="false">
      			    <name lang="en">LED3</name>
      		        <description lang="en">Set to one to turn off LED3</description> 
      		    </bit>  
      		    <bit pos="4" default="false">
      			    <name lang="en">LED4</name>
      		        <description lang="en">Set to one to turn off LED4</description> 
      		    </bit>  
      		    <bit pos="5" default="false">
      			    <name lang="en">LED 5</name>
      		        <description lang="en">Set to one to turn off LED5</description> 
      		    </bit>  
      		    <bit pos="6" default="false">
      			    <name lang="en">LED 6</name>
      		        <description lang="en">Set to one to turn off LED6</description> 
      		    </bit>  
      		    <bit pos="7" default="false">
      			    <name lang="en">LED 7</name>
      		        <description lang="en">Set to one to turn off LED7</description> 
      		    </bit>        		      		      		      		      		
			</param>
		</action>
  
    
    </dmatrix>        
	
	<events>
	
		<event class="0x014" type="0x03" >
			<name lang="en">On Event</name> 					
			<description lang="en">
			    Switch 1 has been pressed. 
			</description> 	
			<priority>4</priority>
			<data offset="0" >						
   			<name lang="en">Index</name>
      		<description lang="en">
      		Set to n indicating switch n+1
      		</description>      	
			</data>
			<data offset="1" >						
   			<name lang="en">Zone</name>
      		<description lang="en">
      		 Set to the zone for the module.
      		</description>      	
			</data>
			<data offset="2" >
   			<name lang="en">Subzone</name>
      		<description lang="en">
      		 Set to the subzone for the switch or if it is zero to the subzone for the module.
      		</description>      	
			</data>
		</event>
		
	</events>
	
</module>	
</vscp>	
